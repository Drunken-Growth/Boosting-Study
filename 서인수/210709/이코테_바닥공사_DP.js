//문제이해
// 가로의 길이 N, 세로의 길이 1인 타일을 채우는 경우의 수룰 구하는 문제
// 사용가능 타일 (2,1), (1,2), (2,2) 3개뿐이다.

// why DP?
// 1. 큼 문제 작은 문제로?
// 2. 작은 문제가 큰 문제 해결에 변하지 않고 반복 사용?

// DP는
// 점화식 세울 수 있는가.로 접근 (i번째값이, i-1, i-2,.. 값으로 구해질 수 있는가)

// 1. 바텀업(for문)
// 2. 탑다운(재귀)

// 문제풀이
// i번째의 경우의 수는 i-1번째, i-2번째로 구할 수가 있다.
// 1. i번째 타일에서 (i-1번째 타일까지가 고정되었다고 생각할 때) 가장 뒤 i번째에 (1x2)타일 넣는 방법
//  => 이때의 경우의 수는 N(i-1)임
// 2. i-2번째 타일까지가 고정되었다고 생각할 때, 가정 뒤 2블록에서 사용가능한 경우의 수는 2가지이다. (2x1타일2개, 2x2타일1개)
//  => 이때의 경우의 수는 N(i-2) x 2 가지이다.

// 3. 따라서 N(i) = N(i-1) + (2 x N(i-2))
// 그림을 그려 이해하는 것이 좋다.

// 바텀업 방식으로 코딩

function solution(n) {
  let memo = [];
  memo[1] = 1;
  memo[2] = 3;

  for (let i = 3; i <= n; i++) {
    memo[i] = memo[i - 1] + 2 * memo[i - 2];
  }
  console.log(memo);
  return memo[n];
}
// console.log(solution(3));
console.log(solution(5));
