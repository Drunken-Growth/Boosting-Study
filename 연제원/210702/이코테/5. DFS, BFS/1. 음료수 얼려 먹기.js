// 문제
// N x M 크기의 얼음 틀이 있다.
// 구멍이 뚫린 부분은 0, 칸막이가 존재하는 부분은 1로 표시된다.
// 구멍이 뚫려 있는 부분끼리 상, 하, 좌, 우로 붙어 있는 경우 서로 연결되어 있는 것으로 간주한다.
// 이때 얼음 틀의 모양이 주어졌을 때 생성되는 총 아이스크림의 개수를 구하는 프로그램을 작성해라.

// 입력
// 첫 번째 줄에 얼음 틀의 세로 길이 N과 가로 길이 M이 주어진다.
// 두 번째 줄부터 N + 1번째 줄까지 얼음 틀의 형태가 주어진다.
// 이때, 구멍이 뚫린 부분은 0, 그렇지 않은 부분은 1이다.

// 출력
// 한 번에 만들 수 있는 아이스크림의 개수를 출력한다.

// 예시
// N = 4, M = 5, ice = [[0,0,1,1,0], [0,0,0,1,1], [1, 1, 1, 1, 1], [0, 0, 0, 0, 0]] => 3개의 아이스크림 생성

function solution(N, M, ice) {
  function dfs(row, col) {
    if (row <= -1 || row >= N || col <= -1 || col >= M) {
      return false;
    }
    if (ice[row][col] === 0) {
      ice[row][col] = 1;
      dfs(row - 1, col);
      dfs(row, col - 1);
      dfs(row + 1, col);
      dfs(row, col + 1);
      return true;
    }
    return false;
  }

  let answer = 0;
  for (let i = 0; i < N; i++) {
    for (let j = 0; j < M; j++) {
      if (dfs(i, j)) {
        answer += 1;
      }
    }
  }

  return answer;
}

console.log(
  solution(4, 5, [
    [0, 0, 1, 1, 0],
    [0, 0, 0, 1, 1],
    [1, 1, 1, 1, 1],
    [0, 0, 0, 0, 0],
  ])
); // 3

console.log(
  solution(15, 14, [
    [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0],
    [1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0],
    [1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0],
    [1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0],
    [1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    [1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
    [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1],
    [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1],
    [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0],
    [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0],
    [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1],
    [1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1],
    [1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1],
  ])
); // 8
